# Note that a bimolecular reaction is recommended to use .xyz or .mol file
# Enumetation part
#input:  /scratch/negishi/li1724/110124-YARP-Github/private_YARP/pyTEST_Example//reaction_xyz/DA.xyz # (1) The input folder with .xyz or .mol file (2) a text file with multiple smiles
input:  reaction_xyz # (1) The input folder with .xyz or .mol file (2) a text file with multiple smiles
scratch: /scratch/negishi/li1724/110124-YARP-Github/private_YARP/pyTEST_Example//RESULT/ # The output folder with reaction geometry for constructing reaction network.
reaction_data: DA.p
n_break: 1 # Indicate the number of breaking bonds
form_all: False # Forming all possible bonds (matters for lone paired electrons (oxygen, sulfur, and other similar atoms)) (default: 0) 
lewis_criteria: 5.0 # the criteria to find the products
ff:            uff        # force field for driving the reaction coordinate           
crest: crest
lot: gfn2
crest_quick: False
xtb: xtb
method: crest
enumeration: False # if you only have reactant, you will need to do enumeration. Ohterwise, you need to provide reaction geometry.
n_conf: 5
nconf_dft: 5
strategy: 2
nprocs: 1
c_nprocs: 1
mem: 1 # in GB
crest: crest
opt_level: vtight
crest_quick: False
opt: False
pysis_wt: 3600
select: network
charge: 0
multiplicity: 1
skip_low_IRC: False
skip_low_TS: False
constrained_TS: True
model_path:   /scratch/negishi/li1724/110124-YARP-Github/private_YARP/pyTEST_Example//bin
gsm_inp:      /scratch/negishi/li1724/110124-YARP-Github/private_YARP/pyTEST_Example//bin/inpfileq

package: ORCA #Gaussian or ORCA
dft_nprocs: 4
dft_lot: UHF 6-31G
dft_wt: 4
ppn: 8
partition: standby
dft_njobs: 1
hess_recalc: 3
dft_irc: True
backward_DE: False
dielectric: 95.3
solvation: CPCM/read
